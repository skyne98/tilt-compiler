import "host" "alloc" (size:usize) -> usize
import "host" "free" (p:usize) -> void

fn main() -> i32 {
entry:
    size:usize = usize.const(8)  # Allocate space for 2 i32 values
    ptr:usize = alloc(size)
    
    # Test pointer arithmetic
    offset:usize = usize.const(0)
    ptr_with_offset:usize = usize.add(ptr, offset)
    
    first_value:i32 = i32.const(10)
    i32.store(ptr_with_offset, first_value)
    
    # Add offset for second i32
    offset2:usize = sizeof.i32()
    ptr2:usize = usize.add(ptr, offset2)
    second_value:i32 = i32.const(20)
    i32.store(ptr2, second_value)
    
    # Load both values and add them
    loaded1:i32 = i32.load(ptr)
    loaded2:i32 = i32.load(ptr2)
    result:i32 = i32.add(loaded1, loaded2)
    
    free(ptr)
    ret (result)
}